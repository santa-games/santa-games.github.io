{"version":3,"sources":["components/Users.js","tools.js","components/charts/doughnut_chart.js","components/User.js","components/Games.js","components/games/tictactoe.js","components/games/connect_4.js","components/Game.js","App.js","index.js"],"names":["Users","state","user_id","this","setState","undefined","redirect","to","className","scope","props","users","map","user","key","onClick","handleClick","user_name","games_won","Component","convertStateIdToName","stateId","fetchJsonFrom","url","a","console","log","fetch","response","json","error","DoughnutChart","chartRef","createRef","myChart","data","labels","d","label","datasets","value","update","Chart","current","type","backgroundColor","colors","ref","User","contents","games_lost","title","Games","game_id","tableContents","games","game","game_state","host_user","guest_user","win_user","next_user","TicTacToe","w","h","svgElements","push","x1","x2","y1","y2","stroke","strokeWidth","i","symbol","r","cx","cy","Math","floor","fill","options","option","s","scx","scy","e","ecx","ecy","width","height","Connect4","rows","cols","Game","timerID","setInterval","clearInterval","hostPlaysFirst","host_plays_first","diagram","game_type_id","host_user_name","guest_user_name","game_state_id","datetime_created","number_of_turns","next_user_id","host_user_id","App","sort","b","find","guest_user_id","win_user_id","src","alt","style","margin","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","path","render","parseInt","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5f4c19d0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Users extends Component {\r\n    state = {}\r\n\r\n    handleClick(user_id) {\r\n        this.setState({ \"redirect\": user_id })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect !== undefined) return <Redirect to={'/users/' + this.state.redirect} />\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Leaderboard</h3>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Won</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.users.map((user) => (\r\n                            <tr key={user.user_id} onClick={() => this.handleClick(user.user_id)}>\r\n                                <td>{user.user_id}</td>\r\n                                <td>{user.user_name}</td>\r\n                                <td>{user.games_won}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users;","export function convertStateIdToName(stateId) {\r\n    if (stateId === 0) return \"Proposed\"\r\n    if (stateId === 1) return \"Active\"\r\n    if (stateId === 2) return \"Completed\"\r\n    if (stateId === 3) return \"Forfeit\"\r\n    if (stateId === 4) return \"Cancelled\"\r\n    return \"Unknown [\"+stateId+\"]\"\r\n}\r\n\r\nexport async function fetchJsonFrom(url) {\r\n    try {\r\n        console.log(\"Fetching from [\"+url+\"]\");\r\n        const response = await fetch(url);\r\n        return await response.json();\r\n    }\r\n    catch (error) {\r\n        console.error(error)\r\n        return {};\r\n    }\r\n}","import React, { Component, createRef } from 'react';\r\nimport Chart from 'chart.js'\r\n\r\nclass DoughnutChart  extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.chartRef = createRef();\r\n        }\r\n    \r\n        componentDidUpdate() {\r\n            this.myChart.data.labels = this.props.data.map(d => d.label);\r\n            this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n            this.myChart.update();\r\n        }\r\n    \r\n        componentDidMount() {\r\n            this.myChart = new Chart(this.chartRef.current, {\r\n                type: 'doughnut',\r\n                data: {\r\n                    labels: this.props.data.map(d => d.label),\r\n                    datasets: [{\r\n                        data: this.props.data.map(d => d.value),\r\n                        backgroundColor: this.props.colors\r\n                    }]\r\n                }\r\n            });\r\n        }\r\n    \r\n        render() {\r\n            return <canvas ref={this.chartRef} />;\r\n    }\r\n}\r\n\r\nexport default DoughnutChart;","import React, { Component } from 'react';\r\nimport { fetchJsonFrom } from '../tools.js'\r\nimport DoughnutChart from \"./charts/doughnut_chart\"\r\nclass User extends Component {\r\n    state = {\r\n        \"user\": undefined,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const user = await fetchJsonFrom(\"https://santa-games.azurewebsites.net/api/users/\"+this.props.user_id)\r\n            this.setState({ \"user\": user });\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let contents;\r\n        if (this.state.user === undefined) contents = <h5>Loading user data...</h5>\r\n        else\r\n        {\r\n            let data = [\r\n                { \"label\" : \"Won\", \"value\" : this.state.user.games_won },\r\n                { \"label\" : \"Lost\", \"value\" : this.state.user.games_lost }\r\n            ]\r\n\r\n            contents = (\r\n                <div className=\"container\">\r\n                    <h3>{this.state.user.user_name}</h3>\r\n                    <h5>Details</h5>\r\n                    <table className=\"table table-sm\">\r\n                        <tbody>\r\n                            <tr><td>User ID</td><td>{this.state.user.user_id}</td></tr>\r\n                            <tr><td>User Name</td><td>{this.state.user.user_name}</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <h5>Stats</h5>\r\n                    <table className=\"table table-sm\">\r\n                        <tbody>\r\n                            <tr><td>Games Played</td><td>{this.state.user.games_lost + this.state.user.games_won}</td></tr>\r\n                            <tr><td>Games Won</td><td>{this.state.user.games_won}</td></tr>\r\n                            <tr><td>Games Lost</td><td>{this.state.user.games_lost}</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                <h5>Stats</h5>\r\n                <DoughnutChart\r\n                    data={data}\r\n                    title=\"Won/Lost\"\r\n                    colors={['#2c3e50', '#95a5a6' ]}/>\r\n                </div>\r\n            )\r\n        }\r\n        return (<div>{contents}</div>)\r\n    }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Games extends Component {\r\n    state = {}\r\n\r\n    handleClick(game_id) {\r\n        this.setState({ \"redirect\": game_id })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect !== undefined) return <Redirect to={'/games/' + this.state.redirect} />\r\n\r\n        let tableContents;\r\n        if (this.props.games !== undefined) {\r\n            tableContents = this.props.games.map((game) => (\r\n                <tr key={game.game_id} onClick={() => this.handleClick(game.game_id)}>\r\n                    <td>{game.game_id}</td>\r\n                    <td>{game.game_state}</td>\r\n                    <td>{game.host_user}</td>\r\n                    <td>{game.guest_user}</td>\r\n                    <td>{game.win_user}</td>\r\n                    <td>{game.next_user}</td>\r\n                </tr>\r\n            ))\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Games</h3>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">State</th>\r\n                            <th scope=\"col\">Host</th>\r\n                            <th scope=\"col\">Guest</th>\r\n                            <th scope=\"col\">Winner</th>\r\n                            <th scope=\"col\">Next</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{tableContents}</tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games;","import React, { Component } from 'react';\r\n\r\nclass TicTacToe extends Component {\r\n\r\n    render() {\r\n        if (this.props.data === null) return null;\r\n        let w = 100;\r\n        let h = 100;\r\n        let key=0;\r\n        let strokeWidth=1;\r\n        \r\n        const svgElements = []\r\n        svgElements.push((<line key={key++} x1={w} x2={w} y1=\"0\" y2={3*h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        svgElements.push((<line key={key++} x1={2*w} x2={2*w} y1=\"0\" y2={3*h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        svgElements.push((<line key={key++} x1=\"0\" x2={3*w} y1={h} y2={h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        svgElements.push((<line key={key++} x1=\"0\" x2={3*w} y1={2*h} y2={2*h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        \r\n        for(let i=0;i<9;i++) {\r\n            let symbol = this.props.data[i];\r\n            let x = i % 3;\r\n            let y = Math.floor(i / 3) % 3;\r\n            let r = w/2*0.8;\r\n            let cx = (x+0.5)*w;\r\n            let cy = (y+0.5)*h;\r\n\r\n            if (symbol === \"X\") {\r\n                svgElements.push((<line key={key++} x1={cx-r} x2={cx+r} y1={cy+r} y2={cy-r} stroke=\"black\" strokeWidth={strokeWidth}/>))\r\n                svgElements.push((<line key={key++} x1={cx-r} x2={cx+r} y1={cy-r} y2={cy+r} stroke=\"black\" strokeWidth={strokeWidth}/>))\r\n            }  \r\n            else if (symbol === \"O\") {\r\n                svgElements.push((<circle key={key++} cx={cx} cy={cy} r={r} stroke=\"black\" fill=\"white\" strokeWidth={strokeWidth} />))\r\n            } \r\n        }   \r\n\r\n        // if any three in a row draw a winning line\r\n        const options = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ]\r\n        for (let i in options) {\r\n            let option = options[i];\r\n            let symbol = this.props.data[option[0]];\r\n            if (symbol === \" \") continue;\r\n            if (this.props.data[option[1]] !== symbol) continue\r\n            if (this.props.data[option[2]] !== symbol) continue\r\n\r\n            let s = option[0];\r\n            let sx = s % 3;\r\n            let sy = Math.floor(s / 3) % 3;\r\n            let scx = (sx+0.5)*w;\r\n            let scy = (sy+0.5)*h;\r\n\r\n            let e = option[2];\r\n            let ex = e % 3;\r\n            let ey = Math.floor(e / 3) % 3;\r\n            let ecx = (ex+0.5)*w;\r\n            let ecy = (ey+0.5)*h;\r\n\r\n            svgElements.push((<line key={key++} x1={scx} x2={ecx} y1={scy} y2={ecy} stroke=\"red\" strokeWidth=\"3\"/>))\r\n        } \r\n        return (<svg className=\"border rounded\" width={3*w} height={3*h}>{svgElements}</svg>)\r\n    }\r\n}\r\n\r\nexport default TicTacToe; ","import React, { Component } from 'react';\r\n\r\nclass Connect4 extends Component {\r\n\r\n    render() {\r\n        if (this.props.data === null) return null;\r\n        let w = 100;\r\n        let h = 100;\r\n        let key=0;\r\n        let strokeWidth=1;\r\n        \r\n        let rows = 6;\r\n        let cols = 7;\r\n\r\n        const svgElements = []\r\n\r\n        for(let i=0;i<=cols;i++) {\r\n            svgElements.push((<line key={key++} x1={i*w} x2={i*w} y1=\"0\" y2={rows*h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        }\r\n        for(let i=0;i<=rows;i++) {\r\n            svgElements.push((<line key={key++} x1=\"0\" x2={cols*w} y1={i*h} y2={i*h} stroke=\"black\" strokeWidth={strokeWidth}/>));\r\n        }\r\n        \r\n        // for(let i=0;i<9;i++) {\r\n        //     let symbol = this.props.data[i];\r\n        //     let x = i % 3;\r\n        //     let y = Math.floor(i / 3) % 3;\r\n        //     let r = w/2*0.8;\r\n        //     let cx = (x+0.5)*w;\r\n        //     let cy = (y+0.5)*h;\r\n\r\n        //     if (symbol === \"X\") {\r\n        //         svgElements.push((<line key={key++} x1={cx-r} x2={cx+r} y1={cy+r} y2={cy-r} stroke=\"black\" strokeWidth={strokeWidth}/>))\r\n        //         svgElements.push((<line key={key++} x1={cx-r} x2={cx+r} y1={cy-r} y2={cy+r} stroke=\"black\" strokeWidth={strokeWidth}/>))\r\n        //     }  \r\n        //     else if (symbol === \"O\") {\r\n        //         svgElements.push((<circle key={key++} cx={cx} cy={cy} r={r} stroke=\"black\" fill=\"white\" strokeWidth={strokeWidth} />))\r\n        //     } \r\n        // }   \r\n\r\n        // // if any three in a row draw a winning line\r\n        // const options = [\r\n        //     [0, 1, 2],\r\n        //     [3, 4, 5],\r\n        //     [6, 7, 8],\r\n        //     [0, 3, 6],\r\n        //     [1, 4, 7],\r\n        //     [2, 5, 8],\r\n        //     [0, 4, 8],\r\n        //     [2, 4, 6],\r\n        // ]\r\n        // for (let i in options) {\r\n        //     let option = options[i];\r\n        //     let symbol = this.props.data[option[0]];\r\n        //     if (symbol === \" \") continue;\r\n        //     if (this.props.data[option[1]] !== symbol) continue\r\n        //     if (this.props.data[option[2]] !== symbol) continue\r\n\r\n        //     let s = option[0];\r\n        //     let sx = s % 3;\r\n        //     let sy = Math.floor(s / 3) % 3;\r\n        //     let scx = (sx+0.5)*w;\r\n        //     let scy = (sy+0.5)*h;\r\n\r\n        //     let e = option[2];\r\n        //     let ex = e % 3;\r\n        //     let ey = Math.floor(e / 3) % 3;\r\n        //     let ecx = (ex+0.5)*w;\r\n        //     let ecy = (ey+0.5)*h;\r\n\r\n        //     svgElements.push((<line key={key++} x1={scx} x2={ecx} y1={scy} y2={ecy} stroke=\"red\" strokeWidth=\"3\"/>))\r\n        // } \r\n        return (<svg className=\"border rounded\" width={cols*w} height={rows*h}>{svgElements}</svg>)\r\n    }\r\n}\r\n\r\nexport default Connect4; ","import React, { Component } from 'react';\r\nimport { convertStateIdToName, fetchJsonFrom } from \"../tools.js\"\r\nimport TicTacToe from \"./games/tictactoe.js\"\r\nimport Connect4 from \"./games/connect_4.js\"\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        \"game\": undefined,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.update()\r\n        this.timerID = setInterval(async () => await this.update(), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    async update() {\r\n        const game = await fetchJsonFrom(\"https://santa-games.azurewebsites.net/api/games/\"+this.props.game_id);\r\n        this.setState({ \"game\": game });\r\n    }\r\n\r\n    render(){\r\n        let contents;\r\n        if (this.state.game === undefined) contents = <h5>Loading game data...</h5>\r\n        else\r\n        {\r\n            let hostPlaysFirst = this.state.game.host_plays_first === undefined || this.state.game.host_plays_first === null;\r\n            let diagram = null;\r\n            console.log(this.state.game.game_type_id)\r\n            if (this.state.game.game_type_id === \"0\") diagram = <TicTacToe data={this.state.game.data} />\r\n            else if (this.state.game.game_type_id === \"1\") diagram = <Connect4 data={this.state.game.data} />\r\n\r\n            contents = (\r\n                <div className=\"container\">\r\n                    <h3>Game #{this.state.game.game_id} | Tic-Tac-Toe | {this.state.game.host_user_name} vs {this.state.game.guest_user_name === null ? \"[TBD]\" : this.state.game.guest_user_name}</h3>\r\n                    <h5>Stats</h5>\r\n                    <table className=\"table table-sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Status</td>\r\n                                <td>{convertStateIdToName(this.state.game.game_state_id)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Created</td>\r\n                                <td>{this.state.game.datetime_created}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <h5>Details</h5>\r\n                    <table className=\"table table-sm\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Player 1</td>\r\n                                <td>{hostPlaysFirst ? \"-\" : (this.state.game.host_plays_first ? this.state.game.host_user_name : this.state.game.guest_user_name)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Player 2</td>\r\n                                <td>{hostPlaysFirst ? \"-\" : (!this.state.game.host_plays_first ? this.state.game.host_user_name : this.state.game.guest_user_name)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Turns</td>\r\n                                <td>{this.state.game.number_of_turns}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Next Player</td>\r\n                                <td>{ this.state.game.next_user_id === null ? \"-\" : (this.state.game.next_user_id === this.state.game.host_user_id ? this.state.game.host_user_name : this.state.game.guest_user_name)}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <h5>State</h5>\r\n                    {diagram}\r\n                </div>\r\n            )\r\n        }\r\n        return (<div>{contents}</div>)\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Users from './components/Users';\r\nimport User from './components/User';\r\nimport Games from './components/Games';\r\nimport Game from './components/Game';\r\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\r\nimport './App.css';\r\nimport { convertStateIdToName, fetchJsonFrom } from \"./tools.js\"\r\n\r\nclass App extends Component {\r\n    state = {\r\n        \"users\": [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await fetchJsonFrom(\"https://santa-games.azurewebsites.net/api/users\")\r\n            const games = await fetchJsonFrom('https://santa-games.azurewebsites.net/api/games');\r\n\r\n            users.sort(function (a, b) { return b.games_won - a.games_won; })\r\n            games.sort(function (a, b) { return b.game_id - a.game_id; })\r\n\r\n            for(let game of games) {\r\n                game.game_state = convertStateIdToName(game.game_state_id);\r\n                game.host_user = game.host_user_id !== null ? users.find(user => user.user_id === game.host_user_id).user_name : \"-\"\r\n                game.guest_user = game.guest_user_id !== null ? users.find(user => user.user_id === game.guest_user_id).user_name : \"-\"\r\n                game.next_user = game.next_user_id !== null ? users.find(user => user.user_id === game.next_user_id).user_name : \"-\"\r\n                game.win_user = game.win_user_id !== null ? users.find(user => user.user_id === game.win_user_id).user_name : \"-\"\r\n            }\r\n            \r\n            this.setState({ \"users\": users, \"games\" : games });\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <div>\r\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                            <img src=\"/icon.svg\" alt=\"Santa\" style={{height: \"40px\", margin: \"100 10 1000 10\"}}></img>\r\n                            <a className=\"navbar-brand\" href=\"/\">Santa-Games</a>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarNav\"\r\n                                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                                <ul className=\"navbar-nav mr-auto\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/\">Leaderboard</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/games\">Games</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                        <Switch>\r\n                            <Route path=\"/users/:user_id\" render={(props) => (<User user_id={parseInt(props.match.params.user_id)} />)}/>\r\n                            <Route path=\"/games/:game_id\" render={(props) => (<Game game_id={parseInt(props.match.params.game_id)} />)}/>\r\n                            <Route path=\"/games\"><Games games={this.state.games} /></Route>\r\n                            <Route path=\"/\"><Users users={this.state.users} /></Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}